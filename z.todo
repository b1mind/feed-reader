Todo:
	☐ start making some abstraction getting pretty WET in here (future me will thank you)
	☐ finish making away to edit lists/list (move add list to lists page, and opml save to xml)
	☐ check against your friends list to know who's added already when discovering
	☐ fix auth proper with Lucia so they are using same user table and Solid sessionStorage
	☐ find out best schema if not OPML/XSD to save lists in pod
		//need to make a shape then find out which schema
		//looking at https://schema.org/Collection > https://schema.org/DataFeed > can be type of webFeed
	☐ better way to init DB on deploy (check if exist, stop whiping every time lol)
	☐ make an actual design and add styles (people do like shiny things proper)
	☐ delete lists recursively or find out if .ttl would be faster/easier
	☐ home page needs a introduction to SolidPods and how to use.
	☐ scss global media queries - (slacker)
	☐ start adding a11y past svelte checks (test with SR)
	☐ prefers reduced motion for animations? (Geoff had some lib for it)
	☐ form error and validation handling (zod?)
	☐ favicon(s) and logo
	✔ fallback img if fails to load. @done // @note(this could be better)
	✔ away to do followers of follows of follows ... recursively? @done
	✔ get a svg sprite of icons and stop using emoji @done
	✔ suggested me/rssPod if no friends with feeds @done
	✔ proper readme and license - contrib etc (start to take this more serious) @done
	✔ login checks need refactored and improved for logout and per page @done
	✔ localStorage for remembering Pod Provider and other settings (persitant$store) @done
	✔ give some better styles for prototype (people like shiny things) @done
	✘ make solid-client util helpers (pretty wet get DRY) @cancelled (dupe)
	
Features:
	☐ away to add a full list (opml string since logic exists already?)
	☐ theme switcher and prefers color
	☐ back to top button!! 
	☐ sticky header/nav or hideaway/scroll up view
	☐ sync changes localstore > pod > localstore (last sync date needed?)
	☐ date added, and last updated props
	☐ favorite posts that save to pod in proper rdf schema.
	☐ favorite feeds for lists to pull random or newest from. (in edit mode?)
	☐ favorite lists to put at top of lists view.
	✔ user settings for openBlank, hideSeen, default post feed order @done
	✔ better media!!!! finally (still don't wanna scrap ogImage but left code in) @done
	✔ add from friends lists @done
	✔ friend of friends (needs icon) @done
	✔ add a friend via webId @done
	✔ refactor endpoint to handle multiple lists @done
	✔ cache headers set for now (keep redis on the look) @done

WishList:
	//make dreams come true
	☐ better client enhancements i.e. transitions (logic in .svelte?)
	☐ update styles for error.html and +error.svelte
	☐ server cache with data change checks for pods and rss. (Redis?)
	☐ private headers cache with busting for follows? (follow follows?)
	☐ youtube videos for direct rss from them
	☐ some kinda last viewed > last updated comparison/feedback to user.
		☐ last updated or new posts... troublesome
		//polling, action, service or web work.. don't really know yet. (ideas? open issue)
	✘ login redirect to last page pass ?last=pagename param (this even needed?) @cancelled
	✔ better Readme and updates to versions @done
	✔ import OPML or another XML list of feeds @done
	✔ fetch api and away to store list/data unless changed? @done

Archive:
	✔ being able to pick a Pod provider @done @project(Todo)
	✔ using cookie for storing sessionInfo till I find a better server/client solution @done @project(Todo)
	✔ error template needed @done @project(Todo)
	✔ test a fetch from api route in kit to serve and possible cache data better? @done @project(Todo)
	✔ logic for if logged in on requests redirect /login @done @project(Todo)
	✔ playing with transition ideas and animation logic per route @done @project(Todo)
	✔ better persistant auth and data @done @project(WishList)
	✔ friends list + their public lists @done @project(Features)
	✔ auth check for non-public pages @done
	✔ utils for slug/spaces in names + any others @done
	✔ test a proper node deployment @done @project(Todo)
	✔ better progressive enhancement forms work no JS @done @project(Features)
